/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Restaurant.Menu;
import Business.Restaurant.RestaurantDirectory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import userinterface.MainJFrame;

/**
 *
 * @author Varakumar
 */
public class MenuJPanel extends javax.swing.JPanel {
    
    RestaurantDirectory restaurantlist;
    EcoSystem system;

    /**
     * Creates new form MenuJPanel
     */
    public MenuJPanel(RestaurantDirectory restaurantlist,EcoSystem system) {
        
        this.system = system;
        restaurantlist = system.getRestaurantdirectory();
        
        
        initComponents();
        
        populateTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMainCourse = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBeverages = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblStarters = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblSpecials = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblDessert = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtStarter = new javax.swing.JTextField();
        txtMainCourse = new javax.swing.JTextField();
        txtBeverage = new javax.swing.JTextField();
        txtDessert = new javax.swing.JTextField();
        txtSpecials = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        tblMainCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Main Course"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMainCourse);

        tblBeverages.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Beverages"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblBeverages);

        tblStarters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Starters"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblStarters);

        tblSpecials.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Specials"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblSpecials);

        tblDessert.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Dessert"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblDessert);

        jLabel1.setText("Add Starter:");

        jLabel2.setText("Add MainCourse:");

        jLabel3.setText("Add Beverage:");

        jLabel4.setText("Add Dessert:");

        jLabel5.setText("Add Specials:");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtStarter, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                            .addComponent(txtMainCourse)
                            .addComponent(txtBeverage)
                            .addComponent(txtDessert)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSpecials, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtStarter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMainCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtBeverage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDessert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSpecials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        if(txtStarter.getText().isEmpty() && txtMainCourse.getText().isEmpty() && txtBeverage.getText().isEmpty()
                && txtSpecials.getText().isEmpty() && txtDessert.getText().isEmpty()){
            
            JOptionPane.showMessageDialog(this, "Fields blank!");
            return;
            
            
        }
        Menu menu = system.getRestaurantdirectory().RetrieveRestaurant(MainJFrame.txtUsernameMain.getText()).getMenu();
        if(!(txtSpecials.getText().isEmpty())){
            String special = txtSpecials.getText();
            
            //Menu menudir = system.getRestaurantdirectory().
            menu.getSpecials().add(special);
            JOptionPane.showMessageDialog(this, "Updated Specials");
            
            
        }
        
        if(!(txtStarter.getText().isEmpty())){
            String starter = txtStarter.getText();
            
            menu.getStarters().add(starter);
            JOptionPane.showMessageDialog(this, "Updated Starters!");
            
            
            
            
        }
        
        if(!(txtBeverage.getText().isEmpty())){
            String bev = txtBeverage.getText();
            
            menu.getBeverages().add(bev);
            JOptionPane.showMessageDialog(this, "Updated Beverages!");
            
            
            
            
        }
        
        if(!(txtMainCourse.getText().isEmpty())){
            String starter = txtMainCourse.getText();
            
            menu.getMaincourse().add(starter);
            JOptionPane.showMessageDialog(this, "Updated Main Course!");
            
            
            
            
        }
        
        if(!(txtDessert.getText().isEmpty())){
            String starter = txtDessert.getText();
            
            menu.getDessert().add(starter);
            JOptionPane.showMessageDialog(this, "Updated Dessert!");
            
            
            
            
        }
        
        
        
        
        
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        Menu menu = system.getRestaurantdirectory().RetrieveRestaurant(MainJFrame.txtUsernameMain.getText()).getMenu();
        DefaultTableModel modelStarter = (DefaultTableModel)tblStarters.getModel();
        int selectedIndex = tblStarters.getSelectedRow();
        if(selectedIndex!=-1){
            
            String starter = modelStarter.getValueAt(selectedIndex, 0).toString();
            menu.getStarters().remove(starter);
            modelStarter.removeRow(selectedIndex);
            
            
        }
        
        
        DefaultTableModel modelmc = (DefaultTableModel)tblMainCourse.getModel();
        int selectedIndex1 = tblMainCourse.getSelectedRow();
        
        if(selectedIndex1!=-1){
            
            String mc = modelmc.getValueAt(selectedIndex1, 0).toString();
            menu.getMaincourse().remove(mc);
            modelmc.removeRow(selectedIndex1);
            
            
            
        }
        
        DefaultTableModel modelbeverage = (DefaultTableModel)tblBeverages.getModel();
        int selectedIndex2 = tblBeverages.getSelectedRow();
        
        if(selectedIndex2!=-1){
            
            String bev = modelbeverage.getValueAt(selectedIndex2, 0).toString();
            menu.getBeverages().remove(bev);
            modelbeverage.removeRow(selectedIndex2);
            
            
            
        }
        
        DefaultTableModel modelsp = (DefaultTableModel)tblSpecials.getModel();
        int selectedIndex3 = tblSpecials.getSelectedRow();
        
        if(selectedIndex3!=-1){
            
            String sp = modelsp.getValueAt(selectedIndex3, 0).toString();
            menu.getSpecials().remove(sp);
            modelsp.removeRow(selectedIndex3);
            
            
            
        }
        
        DefaultTableModel modelds = (DefaultTableModel)tblDessert.getModel();
        int selectedIndex4 = tblDessert.getSelectedRow();
        
        if(selectedIndex4!=-1){
            
            String des = modelds.getValueAt(selectedIndex4, 0).toString();
            menu.getDessert().remove(des);
            modelds.removeRow(selectedIndex4);
            
            
            
        }
        
        
        
        
        
        
        
        
        
        

        

    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tblBeverages;
    private javax.swing.JTable tblDessert;
    private javax.swing.JTable tblMainCourse;
    private javax.swing.JTable tblSpecials;
    private javax.swing.JTable tblStarters;
    private javax.swing.JTextField txtBeverage;
    private javax.swing.JTextField txtDessert;
    private javax.swing.JTextField txtMainCourse;
    private javax.swing.JTextField txtSpecials;
    private javax.swing.JTextField txtStarter;
    // End of variables declaration//GEN-END:variables

    private void populateTables() {
        
        DefaultTableModel modelSpecials = (DefaultTableModel) tblSpecials.getModel();
        modelSpecials.setRowCount(0);
        
        Menu menu = system.getRestaurantdirectory().RetrieveRestaurant(MainJFrame.txtUsernameMain.getText()).getMenu();
        if(menu==null){
            
            Menu men = new Menu();
            system.getRestaurantdirectory().RetrieveRestaurant(MainJFrame.txtUsernameMain.getText()).setMenu(men);
            
            menu = system.getRestaurantdirectory().RetrieveRestaurant(MainJFrame.txtUsernameMain.getText()).getMenu();
            
        }
        
        for(String special: menu.getSpecials()){
            
            Object[] row = new Object[1];
            row[0]= special;
            
            modelSpecials.insertRow(0, row); //To change body of generated methods, choose Tools | Templates.
        }
        
        DefaultTableModel modelStarters = (DefaultTableModel) tblStarters.getModel();
        modelStarters.setRowCount(0);
        
        for(String starter: menu.getStarters()){
            
            Object[] row = new Object[1];
            row[0]= starter;
            
            modelStarters.insertRow(0, row); //To change body of generated methods, choose Tools | Templates.
        }
        
        DefaultTableModel modelMainCourse = (DefaultTableModel) tblMainCourse.getModel();
        modelMainCourse.setRowCount(0);
        
        for(String main: menu.getMaincourse()){
            
            Object[] row = new Object[1];
            row[0]= main;
            
            modelMainCourse.insertRow(0, row); //To change body of generated methods, choose Tools | Templates.
        }
        
        DefaultTableModel modelBeverages = (DefaultTableModel) tblBeverages.getModel();
        modelBeverages.setRowCount(0);
        
        for(String bev: menu.getBeverages()){
            
            Object[] row = new Object[1];
            row[0]= bev;
            
            modelBeverages.insertRow(0, row); //To change body of generated methods, choose Tools | Templates.
        }
        
        DefaultTableModel modelDessert = (DefaultTableModel) tblDessert.getModel();
        modelDessert.setRowCount(0);
        
        for(String dessert: menu.getDessert()){
            
            Object[] row = new Object[1];
            row[0]= dessert;
            
            modelDessert.insertRow(0, row); //To change body of generated methods, choose Tools | Templates.
        }

        
        
         //To change body of generated methods, choose Tools | Templates.
    }

    
}
